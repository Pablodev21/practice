*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
/* 
// DISPLAY //

Tiene muchas propiedades diferentes:

2 tipos de bloques:   BLOCK: Cubre todo el ancho
                      INLINE: Solo cubre lo que el contenido ocupa

                      INLINE-BLOCK: Le podemos dar un ancho y un alto. Permite poner un elemento al lado de otro.

                      TABLE: Comportamiento como tabla
                      INLINE-TABLE: Comportamiento como tabla en linea
                      
                      Ambos se comportan como block, aunque los elementos que estan dentro no se ven afectados por este comportamiento
                      FLEX:
                      GRID:


                      INLINE-FLEX:
                      INLINE-GRID:
 */

.caja1, .caja2, .caja3, .caja4 {

    width: 150px;
    height: 150px;
    margin: 20px;
    border: 20px solid red;
    background:yellow;
    display: inline-block;
}  


/* // La etiqueta <b> se comporta como INLINE, pero cambio su comportamiento para que este como un bloque y tambien pudiendole dar ancho y alto // */
b{
    width: 150px;
    height: 150px;
    margin: 20px;
    border: 20px solid red;
    background:yellow;
    display: block;
}




/* // OVERFLOW // */
/* // En este caso para el texto sobrante, le indico el comportamiento que va a tener // */
/* 
Por defecto-- inherit: deja que sobrepase el sobrante */
/* auto: detecta que en caso de que el contenido sobrepase de la caja, podamos scrollear.
scroll: obliga a que este la barrita de scroll aunque no sea necesaria. */
/* Tambien se puede indicar en que eje quiero el overflow, en x o en y */
/* 
overflow-x
overflow-y
 */

.texto{

    margin: 100px;
    width: 300px;
    height: 250px;
    border: 4px solid red;
    background:grey;
    overflow: auto;
}


/* // Propiedad FLOAT // */

/* Se utiliza para indicar que un elemento debe ser "flotante" y
que debe colocarse a la izquierda o a la derecha de su contenedor, permitiendo que otros elementos fluyan alrededor de él. */
/* // Usado por ejemplo para dejar imagenes a un lado de un texto // */
/* // Algo en desuso // */


.contenedor{
    margin: auto;
    margin-bottom: 200px;
    background: grey;
    border: 3px solid red;
    width: 50%;
    padding: 20px;
}

.imagen{

    float: left;
    width: 40%;
    margin-right: 1em;
}


/* // PSEUDO ELEMENTOS // */

    /* ESTOS SE APLICAN A LOS ELEMENTOS  */

/* // NO AFECTAN AL DOM, AUNQUE PUEDO VER CAMBIOS VISUALES // */

/*

ESTA SI FORMAN PARTE DEL DOM
::first-line   NO FUNCIONA CON INLINE
    Se refiere a la primera linea del elemento 
:: first-letter NO FUNCION CON INLINE
    Se refiere a la primera letra del elemento
*/

.textoPseudo{

    padding: 20px;

}

/* // En este caso la primera linea indiferente del tamaño siempre va a ser azul, de forma dinamica // */
.textoPseudo::first-line{

    color:blue;
    font-size: 2em;
}



/* ESTOS NO FORMAN PARTE DEL DOM, TODOS AQUELLOS QUE TENGAN LA ETIQUETA CONTENT */


/* // El placeholder es lo que aparece en los input antes de que se introduzca nada en ellos // */
form{

    margin:100px auto;
    display: block;
    background-color: #555;
    padding: 20px;
    width:50% ;

}

input{
    padding: 6px;
    width: 100%;
}

/* // Con el pseudo elemento ::placeholder puedo cambiar las propiedades de un placerholder asociado a un input // */

input::placeholder{

    color:blueviolet;
  
}

/* // El pseudo elemento :: selection // */
/* // Se refiere al texto que puedo dejar remarcado o seleccionado con el raton // */
/* // Se comporta como un elemento en linea // */
input::selection{
    color: red;
    background: grey;
}

/* // Los Pseudo elementos ::after y ::before son hijos del elemento al que se aplica // */


.contenedor-parrafo{

  
    margin: auto;
    align-content: center;
}


.parrafo{
   
    font-size: 2em;
    font-weight: 500;
    text-align: center;
    margin-bottom: 2em;
}


/* // Esto hace que añada contenido al parrafo pero como no existe en el DOM no me deja seleccionar este contenido // */
/* // Before hace referencia a que, lo que añada va a ir antes del contenido del propio parrafo // */
.parrafo::before{

    content: "CAMBIO GRACIAS A BEFORE";
    color:  blue;
    background: orange;

}

/* // Esto hace que añada contenido al parrafo pero como no existe en el DOM no me deja seleccionar este contenido // */
/* // After hace referencia a que, lo que añada va a ir despues del contenido del propio parrafo // */
.parrafo::after{

    content:"CAMBIO GRACIAS A AFTER";
    color: red;
    background: grey;
    
}







